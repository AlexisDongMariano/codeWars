## 1. Beginner Series #3 Sum of Numbers ##
# https://www.codewars.com/kata/55f2b110f61eb01779000053/train/python
def get_sum(a,b):
    ans = 0
    if a == b:
        return a
    if a < b:
        for x in range(a, b + 1):
            ans += x
    else:
        for x in (range(b, a + 1)):
            ans += x
            
 # *other answer
 def get_sum(a,b):
    return sum(range(min(a,b), max(a,b)+1))


## 2. Ones and Zeroes ##
# https://www.codewars.com/kata/578553c3a1b8d5c40300037c/train/python
def binary_array_to_number(arr):
    binary_val = 1
    final_val = 0
    
    for e in reversed(arr):
        if e == 1:
            final_val += binary_val
        binary_val += binary_val

    return final_val
    
# *other answer #1
def binary_array_to_number(arr):
    return sum(digit * 2**i for i, digit in enumerate(reversed(arr)))
    
# *other answer #2
def binary_array_to_number(arr):
    s = 0
    for digit in arr:
        s = s * 2 + digit
    return s
    
    
## 3. gimme##
# https://www.codewars.com/kata/545a4c5a61aa4c6916000755
def gimme(input_array):
    for x, i in enumerate(input_array):
        if i != max(input_array) and i != min(input_array):
            return x
# *other answer
return inputArray.index(sorted(inputArray)[1])


## 4. Resistor Color Codes ##
# https://www.codewars.com/kata/57cf3dad05c186ba22000348/solutions/python
def remove_zero(val):
    nval = ''
    if val.endswith('.0'):
        return val[:len(val)-2]
    else:
        return val

def decode_resistor_colors(bands):
    input = bands.split(' ')
    val = 0
    out = ''
    color_codes = {
        'black': '0',
        'brown': '1',
        'red': '2',
        'orange': '3',
        'yellow': '4',
        'green': '5',
        'blue': '6',
        'violet': '7',
        'gray': '8',
        'white': '9'
    }
    val = int(color_codes[input[0]] + color_codes[input[1]])*(10**int(color_codes[input[2]]))

    if val >= 1000 and val < 1000000:
        val /= 1000
        out = f'{remove_zero(str(val))}k ohms,'
    elif val >= 1000000:
        val /= 1000000
        out = f'{remove_zero(str(val))}M ohms,'
    else:
        out = f'{str(val)} ohms,'

    if len(input) == 3:
        out += ' 20%'
    elif input[3] == 'silver':
        out += ' 10%'
    else:
        out += ' 5%'
    return out
    
# *other solution:
code = {'black': 0, 'brown': 1, 'red': 2, 'orange': 3, 'yellow': 4,
'green': 5, 'blue': 6, 'violet': 7, 'gray': 8, 'white': 9,
'gold': 5, 'silver': 10, '': 20}
def decode_resistor_colors(bands):
    colors = (bands + ' ').split(' ')
    value = 10 * code[colors[0]] + code[colors[1]]
    value *= 10 ** code[colors[2]]
    tolerance = code[colors[3]]
    prefix = ''
    for p in 'kM':
        if value // 1000:
            prefix = p
            value /= 1000
    return "%g%s ohms, %d%%" % (value, prefix, tolerance)
