## 1. Count Characters in your String ##
# https://www.codewars.com/kata/52efefcbcdf57161d4000091
def count(string):
    out = {}
    for i in string:
        if i not in out.keys():
            out[i] = 1;
        else:
            out[i] = out.get(i) + 1
    return out
    
# *other solution:
from collections import Counter

def count(string):
    return Counter(string)
    
# *other solution:
def count(string):
    counter = {}
    for char in string:
        counter[char] = counter.get(char, 0) + 1
    return counter

# *other solutions:
def count(string):
    return {ch: string.count(ch) for ch in string}


## 2. IQ Test ##
# https://www.codewars.com/kata/552c028c030765286c00007d 
def iq_test(numbers):
    arr = [int(i) for i in numbers.split(" ")] # splitting the string of numbers then converting each to int

    even_count, odd_count, even, odd = 0, 0, 0, 0

    for x, i in enumerate(arr, 1):
        if i % 2 == 0:
            even_count += 1
            even = x
        else:
            odd_count += 1
            odd = x

    if even_count > 1:
        return odd
    return even
    
# *other answer:
def iq_test(numbers):
    e = [int(i) % 2 == 0 for i in numbers.split()]

    return e.index(True) + 1 if e.count(True) == 1 else e.index(False) + 1
    
# *other answer:
def iq_test(n):
    n = [int(i)%2 for i in n.split()]
    if n.count(0)>1:
        return n.index(1)+1
    else:
        return n.index(0)+1
        
        
## 3. Street Fighter 2 - Character Selection ##
# https://www.codewars.com/kata/5853213063adbd1b9b0000be
def super_street_fighter_selection(fighters, position, moves):
    selection = []
    row, col = position[0], position[0]

    for m in moves:
        if m == 'left':
            col -= 1
            if col < 0:
                col = len(fighters[row])-1
        if m == 'right':
            col += 1
            if col > len(fighters[row])-1:
                col = 0
        if m == 'up':
            if row != 0:
                row -= 1
        if m == 'down':
            if row == 0:
                row += 1
        selection.append(fighters[row][col])
    return selection

# *other answer:
MOVES = {"up": (-1, 0), "down": (1, 0), "right": (0, 1), "left": (0, -1)}

def street_fighter_selection(fighters, initial_position, moves):
    y, x = initial_position
    hovered_fighters = []
    for move in moves:
        dy, dx = MOVES[move]
        y += dy
        if not 0 <= y < len(fighters):
            y -= dy
        x = (x + dx) % len(fighters[y])
        hovered_fighters.append(fighters[y][x])
    return hovered_fighters

# *other answer:
def street_fighter_selection(fighters, initial_position, moves):
    cur_pos = [initial_position[0], initial_position[1]]
    selected_fighters = []

    for move in moves:
        if move == "up": 
            cur_pos[0] = 0
        elif move == "down": 
            cur_pos[0] = 1
        elif move == "right":
            cur_pos[1] = (cur_pos[1] + 1) % 6
        elif move == "left":
            cur_pos[1] = (cur_pos[1] - 1) % 6
        selected_fighters.append(fighters[cur_pos[0]][cur_pos[1]])

    return selected_fighters
